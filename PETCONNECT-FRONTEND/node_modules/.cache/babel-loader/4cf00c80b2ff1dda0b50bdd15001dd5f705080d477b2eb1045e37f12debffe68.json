{"ast":null,"code":"var _jsxFileName = \"D:\\\\TFG\\\\PETCONNECT-FRONTEND\\\\src\\\\components\\\\MapPicker.jsx\",\n  _s = $RefreshSig$();\n// src/components/MapPicker.jsx\n\nimport React, { useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, useMapEvents, useMap } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// ─── Configuración de iconos por defecto ─────────────────────────────────────\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\n// ─── Marker que atiende clics para actualizar posición ──────────────────────\nfunction LocationMarker({\n  latitude,\n  longitude,\n  onChange,\n  readOnly\n}) {\n  _s();\n  // Hook para eventos de mapa\n  const map = useMapEvents({\n    click(e) {\n      if (!readOnly && onChange) {\n        const {\n          lat,\n          lng\n        } = e.latlng;\n        onChange(lat, lng);\n      }\n    }\n  });\n\n  // Cuando cambian lat/lng, centramos el mapa ahí\n  useEffect(() => {\n    if (latitude != null && longitude != null) {\n      map.setView([latitude, longitude], map.getZoom());\n    }\n  }, [latitude, longitude, map]);\n\n  // Sólo dibuja el marcador si tenemos coords\n  return latitude != null && longitude != null ? /*#__PURE__*/_jsxDEV(Marker, {\n    position: [latitude, longitude]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this) : null;\n}\n\n// ─── Componente principal ───────────────────────────────────────────────────\n_s(LocationMarker, \"gWh149/DLPuF22WgXAndVVlzhL4=\", false, function () {\n  return [useMapEvents];\n});\n_c = LocationMarker;\nexport default function MapPicker({\n  latitude,\n  longitude,\n  onChange,\n  readOnly = false,\n  height = 300,\n  zoom = 13\n}) {\n  // Coordenadas por defecto (Madrid)\n  const defaultPosition = [40.4168, -3.7038];\n\n  // Centro dinámico: si tenemos coords, las usamos; si no, fallback\n  const center = latitude != null && longitude != null ? [latitude, longitude] : defaultPosition;\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: center,\n    zoom: zoom,\n    style: {\n      width: '100%',\n      height: `${height}px`\n    },\n    scrollWheelZoom: !readOnly,\n    doubleClickZoom: !readOnly,\n    zoomControl: !readOnly,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LocationMarker, {\n      latitude: latitude,\n      longitude: longitude,\n      onChange: onChange,\n      readOnly: readOnly\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_c2 = MapPicker;\nvar _c, _c2;\n$RefreshReg$(_c, \"LocationMarker\");\n$RefreshReg$(_c2, \"MapPicker\");","map":{"version":3,"names":["React","useEffect","MapContainer","TileLayer","Marker","useMapEvents","useMap","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","LocationMarker","latitude","longitude","onChange","readOnly","_s","map","click","e","lat","lng","latlng","setView","getZoom","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","MapPicker","height","zoom","defaultPosition","center","style","width","scrollWheelZoom","doubleClickZoom","zoomControl","children","attribution","url","_c2","$RefreshReg$"],"sources":["D:/TFG/PETCONNECT-FRONTEND/src/components/MapPicker.jsx"],"sourcesContent":["// src/components/MapPicker.jsx\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Marker, useMapEvents, useMap } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\n// ─── Configuración de iconos por defecto ─────────────────────────────────────\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl:        require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl:      require('leaflet/dist/images/marker-shadow.png'),\r\n});\r\n\r\n// ─── Marker que atiende clics para actualizar posición ──────────────────────\r\nfunction LocationMarker({ latitude, longitude, onChange, readOnly }) {\r\n  // Hook para eventos de mapa\r\n  const map = useMapEvents({\r\n    click(e) {\r\n      if (!readOnly && onChange) {\r\n        const { lat, lng } = e.latlng;\r\n        onChange(lat, lng);\r\n      }\r\n    },\r\n  });\r\n\r\n  // Cuando cambian lat/lng, centramos el mapa ahí\r\n  useEffect(() => {\r\n    if (latitude != null && longitude != null) {\r\n      map.setView([latitude, longitude], map.getZoom());\r\n    }\r\n  }, [latitude, longitude, map]);\r\n\r\n  // Sólo dibuja el marcador si tenemos coords\r\n  return latitude != null && longitude != null ? (\r\n    <Marker position={[latitude, longitude]} />\r\n  ) : null;\r\n}\r\n\r\n// ─── Componente principal ───────────────────────────────────────────────────\r\nexport default function MapPicker({\r\n  latitude,\r\n  longitude,\r\n  onChange,\r\n  readOnly = false,\r\n  height = 300,\r\n  zoom = 13,\r\n}) {\r\n  // Coordenadas por defecto (Madrid)\r\n  const defaultPosition = [40.4168, -3.7038];\r\n\r\n  // Centro dinámico: si tenemos coords, las usamos; si no, fallback\r\n  const center =\r\n    latitude != null && longitude != null\r\n      ? [latitude, longitude]\r\n      : defaultPosition;\r\n\r\n  return (\r\n    <MapContainer\r\n      center={center}\r\n      zoom={zoom}\r\n      style={{ width: '100%', height: `${height}px` }}\r\n      scrollWheelZoom={!readOnly}\r\n      doubleClickZoom={!readOnly}\r\n      zoomControl={!readOnly}\r\n    >\r\n      <TileLayer\r\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n      <LocationMarker\r\n        latitude={latitude}\r\n        longitude={longitude}\r\n        onChange={onChange}\r\n        readOnly={readOnly}\r\n      />\r\n    </MapContainer>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}