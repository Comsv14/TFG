{"ast":null,"code":"var _jsxFileName = \"D:\\\\TFG\\\\PETCONNECT-FRONTEND\\\\src\\\\components\\\\LostPetForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport api from '../api/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LostPetForm({\n  onReport\n}) {\n  _s();\n  const [form, setForm] = useState({\n    pet_name: '',\n    description: '',\n    last_seen_location: '',\n    photo: null\n  });\n  const [loading, setLoading] = useState(false);\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      files\n    } = e.target;\n    if (name === 'photo') {\n      setForm(f => ({\n        ...f,\n        photo: files[0]\n      }));\n    } else {\n      setForm(f => ({\n        ...f,\n        [name]: value\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const fd = new FormData();\n      fd.append('pet_name', form.pet_name);\n      fd.append('description', form.description);\n      fd.append('last_seen_location', form.last_seen_location);\n      if (form.photo) fd.append('photo', form.photo);\n      const res = await api.post('/api/lost-pets', fd, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      onReport(res.data);\n      setForm({\n        pet_name: '',\n        description: '',\n        last_seen_location: '',\n        photo: null\n      });\n    } catch (err) {\n      console.error(err);\n      // Manejo de errores como antes...\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(LostPetForm, \"A27YEucosdSfEY3kCWM/hlQ/Cw8=\");\n_c = LostPetForm;\nvar _c;\n$RefreshReg$(_c, \"LostPetForm\");","map":{"version":3,"names":["React","useState","api","jsxDEV","_jsxDEV","LostPetForm","onReport","_s","form","setForm","pet_name","description","last_seen_location","photo","loading","setLoading","handleChange","e","name","value","files","target","f","handleSubmit","preventDefault","fd","FormData","append","res","post","headers","data","err","console","error","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/TFG/PETCONNECT-FRONTEND/src/components/LostPetForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport api from '../api/axios';\r\n\r\nexport default function LostPetForm({ onReport }) {\r\n  const [form, setForm] = useState({\r\n    pet_name: '',\r\n    description: '',\r\n    last_seen_location: '',\r\n    photo: null,\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value, files } = e.target;\r\n    if (name === 'photo') {\r\n      setForm(f => ({ ...f, photo: files[0] }));\r\n    } else {\r\n      setForm(f => ({ ...f, [name]: value }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const fd = new FormData();\r\n      fd.append('pet_name', form.pet_name);\r\n      fd.append('description', form.description);\r\n      fd.append('last_seen_location', form.last_seen_location);\r\n      if (form.photo) fd.append('photo', form.photo);\r\n\r\n      const res = await api.post('/api/lost-pets', fd, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n      });\r\n\r\n      onReport(res.data);\r\n      setForm({ pet_name: '', description: '', last_seen_location: '', photo: null });\r\n    } catch (err) {\r\n      console.error(err);\r\n      // Manejo de errores como antes...\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {/* tus inputs */}\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,eAAe,SAASC,WAAWA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAChD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC;IAC/BS,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE,EAAE;IACfC,kBAAkB,EAAE,EAAE;IACtBC,KAAK,EAAE;EACT,CAAC,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMe,YAAY,GAAGC,CAAC,IAAI;IACxB,MAAM;MAAEC,IAAI;MAAEC,KAAK;MAAEC;IAAM,CAAC,GAAGH,CAAC,CAACI,MAAM;IACvC,IAAIH,IAAI,KAAK,OAAO,EAAE;MACpBT,OAAO,CAACa,CAAC,KAAK;QAAE,GAAGA,CAAC;QAAET,KAAK,EAAEO,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC,CAAC;IAC3C,CAAC,MAAM;MACLX,OAAO,CAACa,CAAC,KAAK;QAAE,GAAGA,CAAC;QAAE,CAACJ,IAAI,GAAGC;MAAM,CAAC,CAAC,CAAC;IACzC;EACF,CAAC;EAED,MAAMI,YAAY,GAAG,MAAMN,CAAC,IAAI;IAC9BA,CAAC,CAACO,cAAc,CAAC,CAAC;IAClBT,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMU,EAAE,GAAG,IAAIC,QAAQ,CAAC,CAAC;MACzBD,EAAE,CAACE,MAAM,CAAC,UAAU,EAAEnB,IAAI,CAACE,QAAQ,CAAC;MACpCe,EAAE,CAACE,MAAM,CAAC,aAAa,EAAEnB,IAAI,CAACG,WAAW,CAAC;MAC1Cc,EAAE,CAACE,MAAM,CAAC,oBAAoB,EAAEnB,IAAI,CAACI,kBAAkB,CAAC;MACxD,IAAIJ,IAAI,CAACK,KAAK,EAAEY,EAAE,CAACE,MAAM,CAAC,OAAO,EAAEnB,IAAI,CAACK,KAAK,CAAC;MAE9C,MAAMe,GAAG,GAAG,MAAM1B,GAAG,CAAC2B,IAAI,CAAC,gBAAgB,EAAEJ,EAAE,EAAE;QAC/CK,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACnD,CAAC,CAAC;MAEFxB,QAAQ,CAACsB,GAAG,CAACG,IAAI,CAAC;MAClBtB,OAAO,CAAC;QAAEC,QAAQ,EAAE,EAAE;QAAEC,WAAW,EAAE,EAAE;QAAEC,kBAAkB,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC;IACjF,CAAC,CAAC,OAAOmB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClB;IACF,CAAC,SAAS;MACRjB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEX,OAAA;IAAM+B,QAAQ,EAAEZ;EAAa;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEvB,CAAC;AAEX;AAAChC,EAAA,CA/CuBF,WAAW;AAAAmC,EAAA,GAAXnC,WAAW;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}